<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:pattern="http://www.mulesoft.org/schema/mule/pattern"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
   http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd
http://www.mulesoft.org/schema/mule/pattern http://www.mulesoft.org/schema/mule/pattern/current/mule-pattern.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd"
      version="3.4.1">

    <spring:beans>
        <spring:import resource="spring-config.xml"/>
    </spring:beans>

    <custom-transformer name="UCBeforeJsonTransformer" class="com.ucweb.esb.transformer.UCTransformer"
                        doc:name="UCBeforeJsonTransformer">
        <spring:property name="dataTransformer" ref="BeforeJsonTransformer"/>
    </custom-transformer>
    <custom-transformer name="UCAfterJsonTransformer" class="com.ucweb.esb.transformer.UCTransformer"
                        doc:name="UCAfterJsonTransformer">
        <spring:property name="dataTransformer" ref="AfterJsonTransformer"/>
    </custom-transformer>

    <byte-array-to-string-transformer name="byte-to-string"/>
    <string-to-byte-array-transformer name="string-to-byte"/>

    <pattern:http-proxy name="logjson-proxy" transformer-refs="byte-to-string UCBeforeJsonTransformer"
                        responseTransformer-refs="byte-to-string UCAfterJsonTransformer"
                        inboundAddress="http://127.0.0.1:7070/logjson"
                        outboundAddress="http://127.0.0.1:9000/logjson">
    </pattern:http-proxy>

    <flow name="HelloWorld">
        <inbound-endpoint address="http://localhost:8072/jersey"/>
        <echo-component></echo-component>
        <jersey:resources>
            <component class="com.ucweb.esb.webservice.HelloWorldResource"/>
        </jersey:resources>
    </flow>

    <custom-transformer class="com.ggd543.esb.transformer.BeforeActionTransformer" name="BeforeActionTransformer"/>
    <custom-transformer class="com.ggd543.esb.transformer.AfterActionTransformer" name="AfterActionTransformer"/>


    <interceptor-stack name="Checker">
        <!--<custom-interceptor class="com.ggd543.esb.interceptor.PermissionChecker"/>-->
        <custom-interceptor class="com.ggd543.esb.interceptor.RoleChecker"/>
    </interceptor-stack>

    <flow name="test-flow-2">
        <http:inbound-endpoint exchange-pattern="request-response" address="http://127.0.0.1:8066/service/proxy2">
        </http:inbound-endpoint>
        <scripting:component>
            <scripting:script engine="groovy" file="service_monitor.groovy">
                <property key="serviceMonitorUrl" value="http://localhost:9000/service/check"/>
            </scripting:script>
        </scripting:component>
        <custom-interceptor class="com.ggd543.esb.interceptor.RoleChecker"/>
        <http:outbound-endpoint exchange-pattern="request-response"
                                address="http://127.0.0.1:9000/action/invoke?#[message.inboundProperties['http.query.string']]">
            <byte-array-to-string-transformer/>
            <transformer ref="BeforeActionTransformer"/>
            <copy-properties propertyName="http.*"/>
            <response>
                <byte-array-to-string-transformer/>
                <transformer ref="AfterActionTransformer"/>
            </response>
        </http:outbound-endpoint>
        <choice-exception-strategy>
            <catch-exception-strategy when="#[exception.causedBy(com.ggd543.esb.exception.BeforeException)]">
                <component>
                    <singleton-object class="com.ggd543.esb.component.BeforeExceptionComponent"/>
                </component>
                <!--<scripting:component>-->
                <!--<scripting:script engine="groovy">-->
                <!--return "an before exception"-->
                <!--</scripting:script>-->
                <!--</scripting:component>-->
            </catch-exception-strategy>
            <catch-exception-strategy when="#[exception.causedBy(com.ggd543.esb.exception.AfterException)]">
                <component>
                    <singleton-object class="com.ggd543.esb.component.AfterExceptionComponent"/>
                </component>
            </catch-exception-strategy>
            <catch-exception-strategy>
                <component>
                    <singleton-object class="com.ggd543.esb.component.GeneralExceptionComponent"/>
                </component>
                <!--<scripting:component>-->
                <!--<scripting:script engine="groovy">-->
                <!--return "an general exception "-->
                <!--</scripting:script>-->
                <!--</scripting:component>-->
            </catch-exception-strategy>
        </choice-exception-strategy>

    </flow>

    <flow name="test-flow-3">
        <http:inbound-endpoint exchange-pattern="request-response" address="http://127.0.0.1:8066/service/proxy3">
        </http:inbound-endpoint>
        <scripting:component>
            <scripting:script engine="groovy" file="service_monitor.groovy">
                <property key="serviceMonitorUrl" value="http://localhost:9000/service/check"/>
            </scripting:script>
        </scripting:component>
        <custom-interceptor class="com.ggd543.esb.interceptor.DataInterceptor">
        </custom-interceptor>
        <http:outbound-endpoint exchange-pattern="request-response"
                                address="http://127.0.0.1:9000/action/invoke?#[message.inboundProperties['http.query.string']]">
            <!--<byte-array-to-string-transformer/>-->
            <!--<transformer ref="BeforeActionTransformer"/>-->
            <copy-properties propertyName="http.*"/>
            <!--<response>-->
                <!--<byte-array-to-string-transformer/>-->
                <!--<transformer ref="AfterActionTransformer"/>-->
            <!--</response>-->
        </http:outbound-endpoint>
        <choice-exception-strategy>
            <catch-exception-strategy when="#[exception.causedBy(com.ggd543.esb.exception.InvalidServiceExcepton)]">
                <scripting:component>
                    <scripting:script engine="groovy">
                        return "service unavailiable"
                    </scripting:script>
                </scripting:component>
            </catch-exception-strategy>
            <!--<catch-exception-strategy when="#[exception.causedBy(com.ggd543.esb.exception.BeforeException)]">-->
                <!--<component>-->
                    <!--<singleton-object class="com.ggd543.esb.component.BeforeExceptionComponent"/>-->
                <!--</component>-->
                <!--<object-to-string-transformer/>-->
                <!--&lt;!&ndash;<scripting:component>&ndash;&gt;-->
                <!--&lt;!&ndash;<scripting:script engine="groovy">&ndash;&gt;-->
                    <!--&lt;!&ndash;return "an before exception "&ndash;&gt;-->
                <!--&lt;!&ndash;</scripting:script>&ndash;&gt;-->
                <!--&lt;!&ndash;</scripting:component>&ndash;&gt;-->
            <!--</catch-exception-strategy>-->
            <!--<catch-exception-strategy when="#[exception.causedBy(com.ggd543.esb.exception.AfterException)]">-->
                <!--<component>-->
                    <!--<singleton-object class="com.ggd543.esb.component.AfterExceptionComponent"/>-->
                <!--</component>-->
                <!--<object-to-string-transformer/>-->
                <!--&lt;!&ndash;<scripting:component>&ndash;&gt;-->
                    <!--&lt;!&ndash;<scripting:script engine="groovy">&ndash;&gt;-->
                        <!--&lt;!&ndash;return "an after exception "&ndash;&gt;-->
                    <!--&lt;!&ndash;</scripting:script>&ndash;&gt;-->
                <!--&lt;!&ndash;</scripting:component>&ndash;&gt;-->
            <!--</catch-exception-strategy>-->
            <catch-exception-strategy>

                <component>
                <!--<spring-object bean=""-->
                <singleton-object class="com.ggd543.esb.component.GeneralExceptionComponent"/>
                </component>
                <!--<scripting:component>-->
                    <!--<scripting:script engine="groovy">-->
                        <!--return exception.getCause();-->
                    <!--</scripting:script>-->
                <!--</scripting:component>-->
                <object-to-string-transformer/>
            </catch-exception-strategy>
        </choice-exception-strategy>

    </flow>
</mule>
